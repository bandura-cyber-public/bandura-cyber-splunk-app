#Configuration file for syslog-ng

@version: 3.13.2

@include "scl.conf"

@include "`scl-root`/system/tty10.conf"

#Source for listening logs on 514 port from the TIG
options {
	keep-timestamp(yes);
        keep-hostname(yes);
        frac_digits (3);
        };

source s_network_tig {

        syslog(transport(udp) port(514));

};

#Filter to seperate packet logs received from TIG.

filter packet_filter{

       match("packet_log" value("MSGID"));

};

#Filter to seperate domain logs received from TIG.

filter domain_filter{

       match("dns_log" value("MSGID"));

};

#Filter to seperate audit logs received from TIG.

filter audit_filter{

       match("audit_log" value("MSGID"));

};


filter system_filter{

       match("system_log" value("MSGID"));

};



#Filter to seperate domain logs received from TIG.

filter remaining_filter{

       not match("dns_log" value("MSGID")) and not match("packet_log" value("MSGID")) and not match("audit_log" value("MSGID")) and not match("system_log" value("MSGID"))  ;

};

#Destination for Packet logs received from TIG.

destination d_packet_tig {

    file("/var/log/bandura/packet_received_from_tig.log" perm(0744) template("$ISODATE $HOST $MSGID: $MSG\n"));
        };

#Destination for Domain logs received from TIG.

destination d_domain_tig {

    file("/var/log/bandura/domain_received_from_tig.log" perm(0744) template("$ISODATE $HOST $MSGID: $MSG\n")  );

    };

#Destination for Audit  logs received from TIG.

destination d_audit_tig {

    file("/var/log/bandura/audit_received_from_tig.log" perm(0744) template("$FACILITY $PRIORITY $ISODATE $HOST $MSG\n"));
    };


#Destination for system logs received from TIG.
destination d_system_tig {

    file("/var/log/bandura/system_received_from_tig.log"

    template("$FACILITY $PRIORITY $ISODATE $HOST $MSG\n")

    perm(0744)

    );

        };



#Destination for remaining logs apart from Packet and Domain.

destination d_remaining_tig {

    file("/var/log/bandura/remaining_received_from_tig.log"

    template("$FACILITY $PRIORITY $ISODATE $HOST $MSG\n")

    perm(0744)

    );

        };

#Destination for all logs for backup.

destination d_all_tig {

    file("/var/log/bandura/all_received_from_tig.log" perm(0744));

        };

#Saving Packet logs from TIG.

log {

      source(s_network_tig);

      filter(packet_filter);

      destination(d_packet_tig);

    };

#Saving Domain logs from TIG.

log {

      source(s_network_tig);

      filter(domain_filter);

      destination(d_domain_tig);

    };

#Saving Audit logs from TIG.

log {

      source(s_network_tig);

      filter(audit_filter);

      destination(d_audit_tig);

    };


#Saving System logs from TIG.

log {

      source(s_network_tig);

      filter(system_filter);

      destination(d_system_tig);

    };


#Saving Remaining logs from TIG.

log {

      source(s_network_tig);

      filter(remaining_filter);

      destination(d_remaining_tig);

    };

#Saving all logs from TIG for backup.

log {

      source(s_network_tig);

      destination(d_all_tig);

    };



#Source for script filtered logs.
source s_local_filtered {
        file("/var/log/bandura/filtered_logs.log");
        };

#Destination for sending logs to splunk
destination d_splunk_ip {
        tcp("127.0.0.1" port(610));
        };

#Sending filter logs to slunk ip
log {
      source(s_local_filtered);
      destination(d_splunk_ip);
    };
